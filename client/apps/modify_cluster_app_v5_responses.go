// Code generated by go-swagger; DO NOT EDIT.

package apps

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/v2/models"
)

// ModifyClusterAppV5Reader is a Reader for the ModifyClusterAppV5 structure.
type ModifyClusterAppV5Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ModifyClusterAppV5Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewModifyClusterAppV5OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewModifyClusterAppV5BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewModifyClusterAppV5Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewModifyClusterAppV5NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewModifyClusterAppV5Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewModifyClusterAppV5OK creates a ModifyClusterAppV5OK with default headers values
func NewModifyClusterAppV5OK() *ModifyClusterAppV5OK {
	return &ModifyClusterAppV5OK{}
}

/*ModifyClusterAppV5OK handles this case with default header values.

App modified
*/
type ModifyClusterAppV5OK struct {
	Payload *models.V4App
}

func (o *ModifyClusterAppV5OK) Error() string {
	return fmt.Sprintf("[PATCH /v5/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppV5OK  %+v", 200, o.Payload)
}

func (o *ModifyClusterAppV5OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4App)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppV5BadRequest creates a ModifyClusterAppV5BadRequest with default headers values
func NewModifyClusterAppV5BadRequest() *ModifyClusterAppV5BadRequest {
	return &ModifyClusterAppV5BadRequest{}
}

/*ModifyClusterAppV5BadRequest handles this case with default header values.

Invalid input
*/
type ModifyClusterAppV5BadRequest struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppV5BadRequest) Error() string {
	return fmt.Sprintf("[PATCH /v5/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppV5BadRequest  %+v", 400, o.Payload)
}

func (o *ModifyClusterAppV5BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppV5Unauthorized creates a ModifyClusterAppV5Unauthorized with default headers values
func NewModifyClusterAppV5Unauthorized() *ModifyClusterAppV5Unauthorized {
	return &ModifyClusterAppV5Unauthorized{}
}

/*ModifyClusterAppV5Unauthorized handles this case with default header values.

Permission denied
*/
type ModifyClusterAppV5Unauthorized struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppV5Unauthorized) Error() string {
	return fmt.Sprintf("[PATCH /v5/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppV5Unauthorized  %+v", 401, o.Payload)
}

func (o *ModifyClusterAppV5Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppV5NotFound creates a ModifyClusterAppV5NotFound with default headers values
func NewModifyClusterAppV5NotFound() *ModifyClusterAppV5NotFound {
	return &ModifyClusterAppV5NotFound{}
}

/*ModifyClusterAppV5NotFound handles this case with default header values.

App not found
*/
type ModifyClusterAppV5NotFound struct {
	Payload *models.V4GenericResponse
}

func (o *ModifyClusterAppV5NotFound) Error() string {
	return fmt.Sprintf("[PATCH /v5/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppV5NotFound  %+v", 404, o.Payload)
}

func (o *ModifyClusterAppV5NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewModifyClusterAppV5Default creates a ModifyClusterAppV5Default with default headers values
func NewModifyClusterAppV5Default(code int) *ModifyClusterAppV5Default {
	return &ModifyClusterAppV5Default{
		_statusCode: code,
	}
}

/*ModifyClusterAppV5Default handles this case with default header values.

error
*/
type ModifyClusterAppV5Default struct {
	_statusCode int

	Payload *models.V4GenericResponse
}

// Code gets the status code for the modify cluster app v5 default response
func (o *ModifyClusterAppV5Default) Code() int {
	return o._statusCode
}

func (o *ModifyClusterAppV5Default) Error() string {
	return fmt.Sprintf("[PATCH /v5/clusters/{cluster_id}/apps/{app_name}/][%d] modifyClusterAppV5 default  %+v", o._statusCode, o.Payload)
}

func (o *ModifyClusterAppV5Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V4GenericResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
