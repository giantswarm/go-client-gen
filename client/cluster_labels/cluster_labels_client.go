// Code generated by go-swagger; DO NOT EDIT.

package cluster_labels

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// New creates a new cluster labels API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) *Client {
	return &Client{transport: transport, formats: formats}
}

/*
Client for cluster labels API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

/*
GetClusterLabels gets cluster labels

Returns the labels that this cluster is labelled with

*/
func (a *Client) GetClusterLabels(params *GetClusterLabelsParams, authInfo runtime.ClientAuthInfoWriter) (*GetClusterLabelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetClusterLabelsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "getClusterLabels",
		Method:             "GET",
		PathPattern:        "/v5/clusters/{cluster_id}/labels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetClusterLabelsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*GetClusterLabelsOK), nil

}

/*
SetClusterLabels sets cluster labels

Set cluster labels. Keys and labels should adhere to
[Kubernetes labels syntax and character set](https://v1-16.docs.kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set).

Label changes should be written as a [JSON Merge Patch, RFC 7386](https://tools.ietf.org/html/rfc7386).

Changes to labels containing `giantswarm.io` is forbidden,
changes to label `release.giantswarm.io/version`
will be validated against available Giant Swarm releases.

*/
func (a *Client) SetClusterLabels(params *SetClusterLabelsParams, authInfo runtime.ClientAuthInfoWriter) (*SetClusterLabelsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSetClusterLabelsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "setClusterLabels",
		Method:             "PUT",
		PathPattern:        "/v5/clusters/{cluster_id}/labels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SetClusterLabelsReader{formats: a.formats},
		AuthInfo:           authInfo,
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	return result.(*SetClusterLabelsOK), nil

}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
