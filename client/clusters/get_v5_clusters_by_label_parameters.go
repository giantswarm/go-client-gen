// Code generated by go-swagger; DO NOT EDIT.

package clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/giantswarm/gsclientgen/models"
)

// NewGetV5ClustersByLabelParams creates a new GetV5ClustersByLabelParams object
// with the default values initialized.
func NewGetV5ClustersByLabelParams() *GetV5ClustersByLabelParams {
	var ()
	return &GetV5ClustersByLabelParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetV5ClustersByLabelParamsWithTimeout creates a new GetV5ClustersByLabelParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetV5ClustersByLabelParamsWithTimeout(timeout time.Duration) *GetV5ClustersByLabelParams {
	var ()
	return &GetV5ClustersByLabelParams{

		timeout: timeout,
	}
}

// NewGetV5ClustersByLabelParamsWithContext creates a new GetV5ClustersByLabelParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetV5ClustersByLabelParamsWithContext(ctx context.Context) *GetV5ClustersByLabelParams {
	var ()
	return &GetV5ClustersByLabelParams{

		Context: ctx,
	}
}

// NewGetV5ClustersByLabelParamsWithHTTPClient creates a new GetV5ClustersByLabelParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetV5ClustersByLabelParamsWithHTTPClient(client *http.Client) *GetV5ClustersByLabelParams {
	var ()
	return &GetV5ClustersByLabelParams{
		HTTPClient: client,
	}
}

/*GetV5ClustersByLabelParams contains all the parameters to send to the API endpoint
for the get v5 clusters by label operation typically these are written to a http.Request
*/
type GetV5ClustersByLabelParams struct {

	/*XGiantSwarmActivity
	  Name of an activity to track, like "list-clusters". This allows to
	analyze several API requests sent in context and gives an idea on
	the purpose.


	*/
	XGiantSwarmActivity *string
	/*XGiantSwarmCmdLine
	  If activity has been issued by a CLI, this header can contain the
	command line


	*/
	XGiantSwarmCmdLine *string
	/*XRequestID
	  A randomly generated key that can be used to track a request throughout
	services of Giant Swarm.


	*/
	XRequestID *string
	/*Body
	  Label selector

	*/
	Body *models.V5ListClustersByLabel

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithTimeout(timeout time.Duration) *GetV5ClustersByLabelParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithContext(ctx context.Context) *GetV5ClustersByLabelParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithHTTPClient(client *http.Client) *GetV5ClustersByLabelParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXGiantSwarmActivity adds the xGiantSwarmActivity to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithXGiantSwarmActivity(xGiantSwarmActivity *string) *GetV5ClustersByLabelParams {
	o.SetXGiantSwarmActivity(xGiantSwarmActivity)
	return o
}

// SetXGiantSwarmActivity adds the xGiantSwarmActivity to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetXGiantSwarmActivity(xGiantSwarmActivity *string) {
	o.XGiantSwarmActivity = xGiantSwarmActivity
}

// WithXGiantSwarmCmdLine adds the xGiantSwarmCmdLine to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithXGiantSwarmCmdLine(xGiantSwarmCmdLine *string) *GetV5ClustersByLabelParams {
	o.SetXGiantSwarmCmdLine(xGiantSwarmCmdLine)
	return o
}

// SetXGiantSwarmCmdLine adds the xGiantSwarmCmdLine to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetXGiantSwarmCmdLine(xGiantSwarmCmdLine *string) {
	o.XGiantSwarmCmdLine = xGiantSwarmCmdLine
}

// WithXRequestID adds the xRequestID to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithXRequestID(xRequestID *string) *GetV5ClustersByLabelParams {
	o.SetXRequestID(xRequestID)
	return o
}

// SetXRequestID adds the xRequestId to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetXRequestID(xRequestID *string) {
	o.XRequestID = xRequestID
}

// WithBody adds the body to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) WithBody(body *models.V5ListClustersByLabel) *GetV5ClustersByLabelParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the get v5 clusters by label params
func (o *GetV5ClustersByLabelParams) SetBody(body *models.V5ListClustersByLabel) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *GetV5ClustersByLabelParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.XGiantSwarmActivity != nil {

		// header param X-Giant-Swarm-Activity
		if err := r.SetHeaderParam("X-Giant-Swarm-Activity", *o.XGiantSwarmActivity); err != nil {
			return err
		}

	}

	if o.XGiantSwarmCmdLine != nil {

		// header param X-Giant-Swarm-CmdLine
		if err := r.SetHeaderParam("X-Giant-Swarm-CmdLine", *o.XGiantSwarmCmdLine); err != nil {
			return err
		}

	}

	if o.XRequestID != nil {

		// header param X-Request-ID
		if err := r.SetHeaderParam("X-Request-ID", *o.XRequestID); err != nil {
			return err
		}

	}

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
