// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V4InfoResponseGeneralKubernetesVersionsItems v4 info response general kubernetes versions items
// swagger:model v4InfoResponseGeneralKubernetesVersionsItems
type V4InfoResponseGeneralKubernetesVersionsItems struct {

	// The date when the release becomes EOL.
	// Required: true
	// Format: date
	EolDate *strfmt.Date `json:"eol_date"`

	// The version of the Kubernetes release.
	// Required: true
	MinorVersion *string `json:"minor_version"`
}

// Validate validates this v4 info response general kubernetes versions items
func (m *V4InfoResponseGeneralKubernetesVersionsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEolDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMinorVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V4InfoResponseGeneralKubernetesVersionsItems) validateEolDate(formats strfmt.Registry) error {

	if err := validate.Required("eol_date", "body", m.EolDate); err != nil {
		return err
	}

	if err := validate.FormatOf("eol_date", "body", "date", m.EolDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *V4InfoResponseGeneralKubernetesVersionsItems) validateMinorVersion(formats strfmt.Registry) error {

	if err := validate.Required("minor_version", "body", m.MinorVersion); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V4InfoResponseGeneralKubernetesVersionsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V4InfoResponseGeneralKubernetesVersionsItems) UnmarshalBinary(b []byte) error {
	var res V4InfoResponseGeneralKubernetesVersionsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
