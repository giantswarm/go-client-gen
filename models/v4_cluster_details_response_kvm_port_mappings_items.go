// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// V4ClusterDetailsResponseKvmPortMappingsItems v4 cluster details response kvm port mappings items
// swagger:model v4ClusterDetailsResponseKvmPortMappingsItems
type V4ClusterDetailsResponseKvmPortMappingsItems struct {

	// The port on the control plane that will forward traffic to the tenant cluster
	//
	// Maximum: 65535
	// Minimum: 1
	Port int64 `json:"port,omitempty"`

	// The protocol this port mapping is made for.
	//
	Protocol string `json:"protocol,omitempty"`
}

// Validate validates this v4 cluster details response kvm port mappings items
func (m *V4ClusterDetailsResponseKvmPortMappingsItems) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePort(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *V4ClusterDetailsResponseKvmPortMappingsItems) validatePort(formats strfmt.Registry) error {

	if swag.IsZero(m.Port) { // not required
		return nil
	}

	if err := validate.MinimumInt("port", "body", int64(m.Port), 1, false); err != nil {
		return err
	}

	if err := validate.MaximumInt("port", "body", int64(m.Port), 65535, false); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *V4ClusterDetailsResponseKvmPortMappingsItems) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V4ClusterDetailsResponseKvmPortMappingsItems) UnmarshalBinary(b []byte) error {
	var res V4ClusterDetailsResponseKvmPortMappingsItems
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
