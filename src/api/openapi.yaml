openapi: 3.0.0
info:
  description: |
    This is the documentation for the Giant Swarm API.

    For an introduction to Giant Swarm, refer to the [documentation site](https://docs.giantswarm.io/).

    The Giant Swarm API attempts to behave in a __restful__ way. As a developer, you access resources using the `GET` method and, for example, delete them using the same path and the `DELETE` method.

    Accessing resources via GET usually returns all information available about a resource, while collections, like for example the list of all clusters you have access to, only contain a selected few attributes of each member item.

    Some requests, like for example the request to create a new cluster, don't return the resource itself. Instead, the response delivers a standard message body, showing a `code` and a `message` part. The `message` contains information for you or a client's end user. The `code` attribute contains some string (example: `RESOURCE_CREATED`) that is supposed to give you details on the state of the operation, in addition to standard HTTP status codes. This message format is also used in the case of errors. We provide a [list of all response codes](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) outside this documentation.

    Feedback on the API as well as this documentation is welcome via `support@giantswarm.io` or on IRC channel [#giantswarm](irc://irc.freenode.org:6667/#giantswarm) on freenode.

    ## Source

    The source of this documentation is available on [GitHub](https://github.com/giantswarm/api-spec).
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://giantswarm.io/terms/
  title: The Giant Swarm API
  version: 4.0.0
servers:
- description: The production API server
  url: https://{path}
  variables:
    path:
      default: localhost:8000
      description: The path to a giantswarm API server running on a control plane
security:
- AuthorizationHeaderToken: []
tags:
- description: |
    Auth Tokens are your way of authenticating against this API. You can create one by passing your email and base64 encoded password to the create auth token endpoint. The auth token never expires, in case you want to invalidate it you need to delete it (logout).
  name: auth tokens
- description: |
    Clusters are a central resource of the Giant Swarm API. As a team using
    Giant Swarm, you set up Kubernetes clusters to run your own workloads.

    Some cluster-related API operations are provider specific. Please pay
    special attention to provider tags AWS
    Azure KVM
    to find additional information regarding provider compatibility.
  name: clusters
- description: Information about the Giant Swarm installation
  name: info
- description: A key pair is a unique combination of a X.509 certificate and a private
    key. Key pairs are used to access the Kubernetes API of a cluster, both using
    `kubectl` and any standard web browser.
  externalDocs:
    description: 'User guide: Accessing Pods and Services from the Outside'
    url: https://docs.giantswarm.io/guides/accessing-services-from-the-outside/
  name: key pairs
- description: |
    This concept is introduced with v5 of this API and is currently only
    available on AWS.

    Worker nodes in tenant clusters are grouped in node pools. All nodes in a
    node pool share the same configuration and scaling is controlled on a pool
    level. This allows to fulfill a variety of different workload requirements
    within the same cluster.
  name: nodepools
  x-internal: true
- description: 'An app is a helm chart that you can easily install on your tenant
    clusters. Use these endpoints to: find out what catalogs your installation supports,
    and list and install apps on on your tenant clusters.'
  name: apps
- description: Creating an app config lets you supply your apps with custom configuration
    values.
  name: app configs
- description: Organizations are groups of users who own resources like clusters.
  name: organizations
- description: A user represents a person that should have access to the Giant Swarm
    API. Users can belong to many groups, and are identified by email address.
  name: users
- description: |
    A release is a software bundle that constitutes a cluster.

    Releases are identified by their
    [semantic version number](http://semver.org/) in the `MAJOR.MINOR.PATCH`
    format.

    A release provides _components_, like for example Kubernetes. For each
    release the contained components are listed. Changes in components are
    detailed in the _changelog_ of a release.
  name: releases
paths:
  /v4/appcatalogs/:
    get:
      description: |
        Returns an array of app catalog objects, which contains further metadata,
        including a URL to fetch the full index of each catalog.

        #### About the Labels

        - `application.giantswarm.io/catalog-type`
          Describes the type of catalog.

          - `managed` - Apps in this catalog are managed by Giant Swarm.
          - `incubator` - Apps in this catalog are a work in progress. They're
                          made with your Giant Swarm cluster in mind though, so
                          they should work. Feedback is appreciated on these apps.
          - `test` - Apps in this catalog will soon graduate to incubator status,
                      you most likely will not see any `test` catalogs on your
                      installations.
          - `community` - Apps in this catalog are provided by the kubernetes
                          community. They will most likely not work without making
                          some changes to the security settings of your cluster.

          App Catalogs can also be labeled as `internal`, however these catalogs
          contain apps that run on our control planes. These `internal` app catalogs
          will be filtered out and never shown when calling this endpoint.

          For more details on app catalogs visit: https://docs.giantswarm.io/basics/app-catalog/


        ### Example
        ```json
          [
            {
              "metadata": {
                "name": "sample-catalog",
                "labels": {
                  "application.giantswarm.io/catalog-type": "test",
                  "app-operator.giantswarm.io/version": "1.0.0",
                },
              },

              "spec": {
                "description": "Giant Swarm's Sample Catalog with a few apps to test things out.",
                "logoURL": "https://s.giantswarm.io/app-catalog/1/images/sample-catalog.png",

                "storage": {
                  "URL": "https://giantswarm.github.com/sample-catalog/",
                  "type": "helm"
                },
                "title": "Sample Catalog"
              }
            }
          ]
        ```
      operationId: getAppCatalogs
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - metadata:
                      name: sample-catalog
                      labels:
                        application.giantswarm.io/catalog-type: test
                        app-operator.giantswarm.io/version: 1.0.0
                    spec:
                      description: Giant Swarm's Sample Catalog with a few apps to
                        test things out.
                      logoURL: https://s.giantswarm.io/app-catalog/1/images/sample-catalog.png
                      storage:
                        URL: https://giantswarm.github.com/sample-catalog/
                        type: helm
                      title: Sample Catalog
              schema:
                $ref: '#/components/schemas/V4AppCatalogsResponse'
          description: Information
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get a list of app catalogs configured on your installation.
      tags:
      - apps
  /v4/info/:
    get:
      description: |
        Returns a set of details on the installation. The output varies based
        on the provider used in the installation.

        This information is useful for example when creating new cluster, to
        prevent creating clusters with more worker nodes than possible.

        ### Example for an AWS-based installation

        ```json
        {
          "general": {
            "installation_name": "shire",
            "provider": "aws",
            "datacenter": "eu-central-1",
            "availability_zones": {
              "max": 3,
              "default": 1,
            }
          },
          "stats": {
            "cluster_creation_duration": {
              "median": 750,
              "p25": 700,
              "p75": 800
            }
          },
          "workers": {
            "count_per_cluster": {
              "max": null,
              "default": 3
            },
            "instance_type": {
              "options": [
                "m3.medium", "m3.large", "m3.xlarge"
              ],
              "default": "m3.large"
            }
          }
        }
        ```

        ### Example for a KVM-based installation

        ```json
        {
          "general": {
            "installation_name": "isengard",
            "provider": "kvm",
            "datacenter": "string",
            "availability_zones": {
              "max": 1,
              "default": 1,
            }
          },
          "stats": {
            "cluster_creation_duration": {
              "median": 750,
              "p25": 700,
              "p75": 800
            }
          },
          "workers": {
            "count_per_cluster": {
              "max": 8,
              "default": 3
            },
          }
        }
        ```
      operationId: getInfo
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    general:
                      installation_name: shire
                      provider: aws
                      datacenter: eu-central-1
                      availability_zones:
                        max: 3
                        default: 1
                    stats:
                      cluster_creation_duration:
                        median: 750
                        p25: 700
                        p75: 800
                    workers:
                      count_per_cluster:
                        default: 3
                      instance_type:
                        options:
                        - m3.medium
                        - m3.large
                        - m3.xlarge
                        default: m3.large
              schema:
                $ref: '#/components/schemas/V4InfoResponse'
          description: Information
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get information on the installation
      tags:
      - info
  /v4/auth-tokens/:
    delete:
      description: |
        Deletes the authentication token provided in the Authorization header. This effectively logs you out.
      operationId: deleteAuthToken
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The authentication token has been succesfully deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
      summary: Delete Auth Token (Logout)
      tags:
      - auth tokens
    post:
      description: |
        Creates a Auth Token for a given user. Must authenticate with email and password.
      operationId: createAuthToken
      parameters:
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateAuthTokenRequest'
        description: Create Auth Token Request
        required: true
        x-examples:
          application/json:
            email: developer@example.com
            password_base64: cGFzc3dvcmQ=
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    auth_token: e5239484-2299-41df-b901-d0568db7e3f9
              schema:
                $ref: '#/components/schemas/V4CreateAuthTokenResponse'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
      summary: Create Auth Token (Login)
      tags:
      - auth tokens
  /v4/users/:
    get:
      description: |
        Returns a list of all users in the system. Currently this endpoint is only available to users with admin permissions.
      operationId: getUsers
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - email: andy@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2019-01-15T00:00:00Z
                  - email: bob@example.com
                    created: 2017-02-15T12:30:00Z
                    expiry: 2020-01-15T00:00:00Z
                  - email: charles@example.com
                    created: 2017-03-15T13:00:00Z
                    expiry: 2021-01-15T00:00:00Z
              schema:
                items:
                  $ref: '#/components/schemas/V4UserListItem'
                type: array
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get users
      tags:
      - users
  /v4/user/:
    get:
      description: |
        Returns details about the currently authenticated user
      operationId: getCurrentUser
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    email: andy@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2019-01-15T00:00:00Z
              schema:
                $ref: '#/components/schemas/V4UserListItem'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get current user
      tags:
      - users
  /v4/users/{email}/:
    delete:
      description: |
        Deletes a users in the system. Currently this endpoint is only available
        to users with admin permissions.
      operationId: deleteUser
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: The user's email address
        in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The user with email 'bob@example.com' has been deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User deleted
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The user could not be deleted. (not found: user with
                      email ''bob@example.com'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Delete user
      tags:
      - users
    get:
      description: |
        Returns details about a specific user
      operationId: getUser
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: The user's email address
        in: path
        name: email
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    email: andy@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2019-01-15T00:00:00Z
              schema:
                $ref: '#/components/schemas/V4UserListItem'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The user could not be found. (not found: user with email
                      ''bob@example.com'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get user
      tags:
      - users
    patch:
      description: |
        This operation allows you to change details of a given user. Only administrators can edit accounts of other users.
      operationId: modifyUser
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: The user's email address
        in: path
        name: email
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4ModifyUserRequest'
        description: User account details
        required: true
        x-examples:
          application/json:
            email: edited-email@example.com
            expiry: 2037-01-15T00:00:00Z
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    email: edited-email@example.com
                    created: 2017-01-15T12:00:00Z
                    expiry: 2037-01-15T00:00:00Z
              schema:
                $ref: '#/components/schemas/V4UserListItem'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Modify user
      tags:
      - users
    put:
      description: |
        Creates a users in the system. Currently this endpoint is only available to users with admin permissions.
      operationId: createUser
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: The user's email address
        in: path
        name: email
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateUserRequest'
        description: User account details
        required: true
        x-examples:
          application/json:
            password: cGFzc3dvcmQ=
            expiry: 2020-01-01T12:00:00.000Z
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: The user with email 'bob@example.com' has been created.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User created
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: 'The user could not be created. (invalid input: email
                      ''bob@example.com'' already exists)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User already exists
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Create user
      tags:
      - users
  /v4/users/{email}/password/:
    post:
      description: |
        This operation allows you to change your password. Admins are able to change passwords of other users.
      operationId: modifyPassword
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: The user's email address
        in: path
        name: email
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4ModifyUserPasswordRequest'
        description: Modify password request
        required: true
        x-examples:
          application/json:
            current_password_base64: cGFzc3dvcmQ=
            new_password_base64: bXluZXdwYXNzd29yZA==
      responses:
        202:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_UPDATED
                    message: The password has been updated.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Accepted
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The user could not be found. (not found: user with email
                      ''bob@example.com'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: User not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Modify password
      tags:
      - users
  /v4/clusters/:
    get:
      description: |
        This operation fetches a list of clusters.

        The result depends on the permissions of the user.
        A normal user will get all the clusters the user has access
        to, via organization membership.
        A user with admin permission will receive a list of all existing
        clusters.

        The result array items are sparse representations of the cluster
        objects. To fetch more details on a cluster, use the
        [getClusterStatus](#operation/getClusterStatus) operation.
      operationId: getClusters
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - id: g8s3o
                    create_date: 2019-03-08T12:31:47.215Z
                    name: Staging Cluster
                    owner: acme
                    release_version: 7.0.1
                    path: /v4/clusters/g8s3o/
                  - id: 3dkr6
                    create_date: 2019-07-22T13:58:02.024Z
                    name: Node Pools Cluster
                    owner: testorg
                    release_version: 9.0.0
                    path: /v5/clusters/3dkr6/
              schema:
                items:
                  $ref: '#/components/schemas/V4ClusterListItem'
                type: array
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get clusters
      tags:
      - clusters
    post:
      description: |
        This operation is used to create a new Kubernetes cluster or
        "tenant cluster".

        ### Cluster definition

        The cluster definition format allows to set a number of optional
        configuration details, like worker node configuration, with node
        specification depending on the provider (e. g. on Azure the
        VM size, or on KVM the memory size and number of CPU cores).

        One attribute is __mandatory__ upon creation: The `owner`
        attribute must carry the name of the organization the cluster will
        belong to. Note that the acting user must be a member of that
        organization in order to create a cluster.

        For all other attributes, defaults will be applied if the attribute
        is not set. Check out the [getInfo](#operation/getInfo) operation for
        more info about defaults. If no `release_version` is set, the latest
        release version available for the provider will be used.
      operationId: addCluster
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4AddClusterRequest'
        description: New cluster definition
        required: true
        x-examples:
          application/json:
            owner: myteam
            release_version: 7.1.0
            name: Example cluster with 3 m5.xlarge nodes
            availability_zones: 2
            scaling:
              min: 3
              max: 3
            workers:
            - aws:
                instance_type: m5.xlarge
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: A new cluster has been created with ID 'wqtlq'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster created
          headers:
            Location:
              description: URI to obtain details on the new cluster using the [getCluster](#operation/getCluster)
                operation
              schema:
                type: string
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Create cluster (v4)
      tags:
      - clusters
  /v4/clusters/{cluster_id}/:
    delete:
      description: |
        This operation triggers deleting a cluster with all resources attached to it.

        Deleting a cluster causes the termination of all workloads running on
        the cluster. Data stored on the worker nodes will be lost. There is no
        way to undo this operation.

        The response is sent as soon as the request is validated.
        At that point, workloads might still be running on the cluster and may be accessible for a little wile, until the cluster is actually deleted.
      operationId: deleteCluster
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        202:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETION_STARTED
                    message: The cluster with ID 'wqtlq' is being deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Deleting cluster
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster ID
                      is correct, and that you are a member of the organization that
                      it belongs to.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Delete cluster
      tags:
      - clusters
    get:
      description: |
        This operation allows to obtain basic details on a particular cluster.
      operationId: getCluster
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: wqtlq
                    create_date: 2017-03-03T10:50:45.949270905Z
                    api_endpoint: https://api.wqtlq.example.com
                    name: Just a Standard Cluster
                    release_version: 2.5.16
                    owner: acme
                    credential_id: a1b2c
                    availability_zones:
                    - fire-zone-1
                    workers:
                    - memory:
                        size_gb: 2
                      storage:
                        size_gb: 20
                      cpu:
                        cores: 4
                      labels:
                        beta.kubernetes.io/arch: amd64
                        beta.kubernetes.io/os: linux
                        ip: 10.3.11.2
                        kubernetes.io/hostname: worker-1.x882ofna.k8s.gigantic.io
                        nodetype: hicpu
                    - memory:
                        size_gb: 8
                      storage:
                        size_gb: 20
                      cpu:
                        cores: 2
                      labels:
                        beta.kubernetes.io/arch: amd64
                        beta.kubernetes.io/os: linux
                        ip: 10.3.62.2
                        kubernetes.io/hostname: worker-2.x882ofna.k8s.gigantic.io
                        nodetype: hiram
                    kvm:
                      port_mappings:
                      - port: 30020
                        protocol: http
                      - port: 30021
                        protocol: https
              schema:
                $ref: '#/components/schemas/V4ClusterDetailsResponse'
          description: Cluster details
        301:
          description: Version mismatch
          headers:
            Location:
              description: |
                URI of the new path to use for retrying the request, as the one
                used is not usable for this cluster.
              schema:
                type: string
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster ID
                      is correct, and that you are a member of the organization that
                      it belongs to.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get cluster details (v4)
      tags:
      - clusters
    patch:
      description: |
        This operation allows to modify an existing cluster.

        A cluster modification is performed by submitting a `PATCH` request
        to the cluster resource (as described in the
        [addCluster](#operation/addCluster) and [getCluster](#operation/getCluster))
        in form of a [JSON Patch Merge
        (RFC 7386)](https://tools.ietf.org/html/rfc7386). This means, only the
        attributes to be modified have to be contained in the request body.

        The following attributes can be modified:

        - `name`: Rename the cluster to something more fitting.

        - `owner`: Changing the owner organization name means to change cluster
        ownership from one organization to another. The user performing the
        request has to be a member of both organizations.

        - `release_version`: By changing this attribute you can upgrade a
        cluster to a newer
        [release](https://docs.giantswarm.io/api/#tag/releases).

        - `scaling`: Adjust the cluster node limits to make use of auto scaling
        or to have full control over the node count. The latter can be
        achieved by setting `min` and `max` to the same values. Note that
        setting `min` and `max` to different values (effectively enabling
        autoscaling) is only available on AWS with releases from 6.2.0.

          - `workers` (deprecated): For backward compatibility reasons, it is
        possible to provide this attribute as an array, where the number of
        items contained in the array determines the intended number of worker
        nodes in the cluster. The item count will be applied as both `min` and
        `max` value of the scaling limits, effectively disabling autoscaling.
        This requires the `scaling` attribute must not be present in the same
        request.

        ### Limitations

        - As of now, existing worker nodes cannot be modified.
        - The number of availability zones cannot be modified.
        - When removing nodes (scaling down), it is not possible to determine
        which nodes will be removed.
      operationId: modifyCluster
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4ModifyClusterRequest'
        description: Merge-patch body
        required: true
        x-examples:
          application/merge-patch+json:
            name: New cluster name
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4ClusterDetailsResponse'
          description: Cluster modified
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster ID
                      is correct, and that you are a member of the organization that
                      it belongs to.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Modify cluster (v4)
      tags:
      - clusters
  /v4/clusters/{cluster_id}/key-pairs/:
    get:
      description: |
        Returns a list of information on all key pairs of a cluster as an array.

        The individual array items contain metadata on the key pairs, but neither the key nor the certificate. These can only be obtained upon creation, using the [addKeypair](#operation/addKeyPair) operation.
      operationId: getKeyPairs
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GetKeyPairsResponse'
          description: Key pairs
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get key pairs
      tags:
      - key pairs
    post:
      description: |
        This operation allows to create a new key pair for accessing a specific cluster.

        A key pair consists of an unencrypted private RSA key and an X.509 certificate. In addition, when obtaining a key pair for a cluster, the cluster's certificate authority file (CA certificate) is delivered, which is required by TLS clients to establish trust to the cluster.

        In addition to the credentials itself, a key pair has some metadata like a unique ID, a creation timestamp and a free text `description` that you can use at will, for example to note for whom a key pair has been issued.

        ### Customizing the certificate's subject for K8s RBAC

        It is possible to set the Common Name and Organization fields of the generated certificate's subject.

        - `cn_prefix`: The certificate's common name uses this format: `.user.`.

          `clusterdomain` is specific to your cluster and is not editable.

          The `cn_prefix` however is editable. When left blank it will default
          to the email address of the Giant Swarm user that is performing the
          create key pair request.

          The common name is used as the username for requests to the Kubernetes API. This allows you
          to set up role-based access controls.


        - `certificate_organizations`: This will set the certificate's `organization` fields. Use a comma separated list of values.
          The Kubernetes API will use these values as group memberships.

        __Note:__ The actual credentials coming with the key pair (key, certificate) can only be accessed once, as the result of the `POST` request that triggers their creation. This restriction exists to minimize the risk of credentials being leaked. If you fail to capture the credentials upon creation, you'll have to repeat the creation request.
      operationId: addKeyPair
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4AddKeyPairRequest'
        description: |
          While the `ttl_hours` attribute is optional and will be set to a default value when omitted, the `description` is mandatory.
        required: true
        x-examples:
          application/json:
            description: Admin key pair lasting twelve hours
            ttl_hours: 12
            certificate_organizations: system:masters
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    certificate_authority_data: '-----BEGIN CERTIFICATE-----...-----END
                      CERTIFICATE-----'
                    client_key_data: '-----BEGIN RSA PRIVATE KEY-----...-----END RSA
                      PRIVATE KEY-----'
                    client_certificate_data: '-----BEGIN CERTIFICATE-----...-----END
                      CERTIFICATE-----'
                    create_date: 2016-06-01T12:00:00.000Z
                    description: Key pair description
                    id: 02:cc:da:f9:fb:ce:c3:e5:e1:f6:27:d8:43:48:0d:37:4a:ee:b9:67
                    ttl_hours: 8640
              schema:
                $ref: '#/components/schemas/V4AddKeyPairResponse'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
      summary: Create key pair
      tags:
      - key pairs
  /v4/clusters/{cluster_id}/status/:
    get:
      description: |
        Returns an object about a cluster's current state and past status transitions.

        This endpoint exposes the status content of the Kubernetes resources representing
        a cluster in the corresponding custom resource. That is, depending on the provider:

        - [`awsconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AWSConfig)
        - [`azureconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#AzureConfig)
        - [`kvmconfig.provider.giantswarm.io`](https://godoc.org/github.com/giantswarm/apiextensions/pkg/apis/provider/v1alpha1#KVMConfig)

        Note that structure and style differ from the rest of the v4 API. Also note that
        the structure depends on the release version and changes can be expected frequently.
      operationId: getClusterStatus
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GetClusterStatusResponse'
          description: Cluster status
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get cluster status
      tags:
      - clusters
  /v4/clusters/{cluster_id}/apps/:
    get:
      description: |
        Returns an array of apps installed on a given cluster.

        ### Example
        ```json
          [
            {
              "metadata": {
                "name": "my-awesome-prometheus",
              },

              "spec": {
                "catalog": "sample-catalog"
                "name": "prometheus-chart",
                "namespace": "giantswarm",
                "version": "0.2.0",
                "user_config": {
                  "configmap": {
                    "name": "prometheus-user-values",
                    "namespace": "123ab"
                  }
                }
              },

              "status": {
                "app_version": "1.0.0",
                "release": {
                  "last_deployed": "2019-04-08T12:34:00Z",
                  "status": "DEPLOYED"
                },
                "version": "0.2.0",
              }
            }
          ]
        ```
      operationId: getClusterApps
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - metadata:
                      name: my-awesome-prometheus
                    spec:
                      catalog: sample-catalog
                      name: prometheus-chart
                      namespace: giantswarm
                      version: 0.2.0
                      user_config:
                        configmap:
                          name: prometheus-user-values
                          namespace: 123ab
                    status:
                      app_version: 1.0.0
                      release:
                        last_deployed: 2019-04-08T12:34:00Z
                        status: DEPLOYED
                      version: 0.2.0
              schema:
                $ref: '#/components/schemas/V4GetClusterAppsResponse'
          description: Cluster apps
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get cluster apps
      tags:
      - apps
  /v4/clusters/{cluster_id}/apps/{app_name}/:
    delete:
      description: |
        This operation allows a user to delete an app.
      operationId: deleteClusterApp
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: Your app 'acme' on 'adc23' has been deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App deleted
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: App could not be deleted. (app with name 'my-awesome-app'
                      in cluster 'abc12' could not be found)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Delete an app
      tags:
      - apps
    patch:
      description: |
        This operation allows you to modify an existing app.

        The following attributes can be modified:

        - `version`: Changing this field lets you upgrade or downgrade an app.

        `catalog`, `name`, `namespace`, and `user_config` are not editable. If you need to move or rename an app, you should instead delete the app and make it again.

        The request body must conform with the [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386) standard.
        Requests have to be sent with the `Content-Type: application/merge-patch+json` header.
      operationId: modifyClusterApp
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4ModifyAppRequest'
        x-examples:
          application/merge-patch+json:
            spec:
              version: 0.3.0
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4App'
          description: App modified
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: 'The app could not be modified. (invalid input: name
                      is not an editable field)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Invalid input
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The app could not be modified. (not found: the app with
                      name ''my-great-app'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Modify an app
      tags:
      - apps
    put:
      description: |
        Install an app on a tenant cluster by posting to this endpoint.

        The spec field represents the app we'll be installing, and so spec.name refers to
        the name of the chart that installs this app in the catalog.

        The response you get on a succesful create includes the status of the app. However
        since the App is still initialising and this is an asynchronous operation, it is
        likely that the fields in this status object will be all empty values.

        To check on the status of your app, perform a GET to /v4/clusters/{cluster_id}/apps/,
        and check the status field of the app.

        ### Example PUT request
        ```json
          {
            "spec": {
              "catalog": "sample-catalog",
              "name": "prometheus-chart",
              "namespace": "prometheus",
              "version": "0.2.0",
            }
          }
        ```

        ### About the user_config field in the response
        This field is not editable by you, but is set automatically by the API
        if a configmap named `{app_name}-user-values` exists in the tenant cluster
        namespace on the control plane.

        The `/v4/clusters/{cluster_id}/apps/{app_name}/config/` endpoints allows
        you to create such a configmap using this API.

        It is recommended to create your config before creating your app. This
        will result in a faster deploy.

        However, you can create your config after creating the app if you wish,
        this API will take care of setting the `user_config` field of the app
        correctly for you.

        ### Why can't I just set the `user_config` value myself?
        It simplifies usage while also being a security measure.

        Furthermore it is also a security measure and ensures that users of this
        API can't access arbitrary configmaps of the control plane.

        This API will only allow you to edit or access configmaps that adhere
        to a strict naming convention.
      operationId: createClusterApp
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateAppRequest'
        x-examples:
          application/json:
            spec:
              catalog: sample-catalog
              name: prometheus-chart
              namespace: prometheus
              version: 0.2.0
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    metadata:
                      name: my-awesome-prometheus
                    spec:
                      catalog: sample-catalog
                      name: prometheus-chart
                      namespace: giantswarm
                      version: 0.2.0
                      user_config:
                        configmap:
                          name: prometheus-user-values
                          namespace: 123ab
                    status:
                      app_version: ""
                      release:
                        last_deployed: 0000-00-00T00:00:00Z
                        status: ""
                      version: ""
              schema:
                $ref: '#/components/schemas/V4App'
          description: Create cluster app
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App could not be created. (invalid input)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Invalid input
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        409:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: An app with this name already exists.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App already exists
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Install an app
      tags:
      - apps
  /v4/clusters/{cluster_id}/apps/{app_name}/config/:
    delete:
      description: |
        This operation allows a user to delete an app's user config if it has been named according to the convention of {app-name}-user-values and
        stored in the cluster ID namespace.

        Calling this endpoint will delete the ConfigMap, but it does not remove the reference to the ConfigMap in the (spec.user_config.configmap field) from the app.

        Do make sure you also update the app and remove the reference.

        The preferred order is to first remove the reference to the configmap by
        updating the app, and only then delete the configmap using this endpoint.
      operationId: deleteClusterAppConfig
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: App config for 'my-app' on 'abc12' has been deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App Config deleted
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The user config of app 'my-app' could not be deleted.
                      ('my-app' not found)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App Config not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Delete an app config
      tags:
      - app configs
    get:
      description: |
        This operation allows you to fetch the user values configmap associated
        with an app.
      operationId: getClusterAppConfig
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GetClusterAppConfigResponse'
            appication/json:
              examples:
                response:
                  value:
                    agent:
                      key: secret-key-here
                      endpointHost: saas-eu-west-1.instana.io
                      endpointPort: "443"
                    zone:
                      name: giantswarm-cluster
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: Unable to show app config. (app with name 'my-awesome-app'
                      in cluster 'abc12' could not be found)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App Config not found
      summary: Get app config
      tags:
      - app configs
    patch:
      description: |
        This operation allows you to modify the values configmap for a specific app.
        It's only possible to modify app configs that have been named according to the convention of
        {app-name}-user-values and stored in the cluster ID namespace.

        The full values key of the configmap will be replaced by the JSON body
        of your request.

        ### Example PATCH request
        ```json
          {
            "agent": {
              "key": "a-new-key-here",
            }
          }
        ```

        If the configmap contained content like:

        ```json
          {
            "agent": {
              "key": "an-old-key-here",
              "admin": true,
            },
            "server": {
              "url": "giantswarm.io",
            }
          }
        ```

        Then the "server" and "admin" keys will be removed.
      operationId: modifyClusterAppConfig
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateAppConfigRequest'
        x-examples:
          application/json:
            agent:
              key: a-new-key-here
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
            appication/json:
              examples:
                response:
                  value:
                    code: RESOURCE_UPDATED
                    message: App config for 'my-awesome-app' on 'abc12' has been updated.
          description: Success
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App config could not be created. (invalid input)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Invalid input
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Modify app config
      tags:
      - app configs
    put:
      description: |
        This operation allows you to create a values configmap for a specific app. The app does
        not have to exist before hand.

        If the app does exist, this endpoint will ensure that the App CR gets it's
        user_config field set correctly.

        However, if the app exists and the user_config is already set to something,
        then this request will fail. You will in that case most likely want to
        update the config using the `PATCH /v4/clusters/{cluster_id}/apps/{app_name}/config/`
        endpoint.

        ### Example POST request
        ```json
          {
            "agent": {
              "key": "secret-key-here",
              "endpointHost": "saas-eu-west-1.instana.io",
              "endpointPort": "443",
            },
            "zone": {
              "name": "giantswarm-cluster"
            }
          }
        ```
      operationId: createClusterAppConfig
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: App Name
        in: path
        name: app_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4CreateAppConfigRequest'
        x-examples:
          appication/json:
            agent:
              key: secret-key-here
              endpointHost: saas-eu-west-1.instana.io
              endpointPort: "443"
            zone:
              name: giantswarm-cluster
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
            appication/json:
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: App config for 'my-awesome-app' on 'abc12' has been created.
          description: Success
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: App config could not be created. (invalid input)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Invalid input
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        409:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: A config for 'my-awesome-app' on 'abc12' already exists.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: App config already exists
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Create app config
      tags:
      - app configs
  /v4/organizations/:
    get:
      description: |
        This operation allows to fetch a list of organizations the user is a
        member of. In the case of an admin user, the result includes all
        existing organizations.
      operationId: getOrganizations
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - id: acme
                  - id: giantswarm
                  - id: testorg
              schema:
                items:
                  $ref: '#/components/schemas/V4OrganizationListItem'
                type: array
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get organizations
      tags:
      - organizations
  /v4/organizations/{organization_id}/:
    delete:
      description: |
        This operation allows a user to delete an organization that they are a member of.
        Admin users can delete any organization.
      operationId: deleteOrganization
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETED
                    message: The organization with ID 'acme' has been deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization deleted
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The organization could not be deleted. (not found: the
                      organization with id ''acme'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization not found
        409:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: FAILURE
                    message: The organization cannot be deleted while it has credentials
                      attached to it.  Please contact Giant Swarm support for help.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization has credentials
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Delete an organization
      tags:
      - organizations
    get:
      description: |
        This operation fetches organization details.
      operationId: getOrganization
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: acme
                    members:
                    - email: user1@example.com
                    - email: user2@example.com
              schema:
                $ref: '#/components/schemas/V4Organization'
          description: Organization details
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The organization could not be found. (not found: the
                      organization with id ''acme'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Get organization details
      tags:
      - organizations
    patch:
      description: |
        This operation allows you to modify an existing organization. You must be
        a member of the organization or an admin in order to use this endpoint.

        The following attributes can be modified:

        - `members`: By modifying the array of members, members can be added to or removed from the organization

        The request body must conform with the [JSON Patch Merge (RFC 7386)](https://tools.ietf.org/html/rfc7386) standard.
        Requests have to be sent with the `Content-Type: application/merge-patch+json` header.

        The full request must be valid before it will be executed, currently this
        means every member you attempt to add to the organization must actually
        exist in the system. If any member you attempt to add is invalid, the entire
        patch operation will fail, no members will be added or removed, and an error message
        will explain which members in your request are invalid.
      operationId: modifyOrganization
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/inline_object'
        content:
          application/json:
            schema:
              properties:
                members:
                  description: List of members that belong to this organization
                  items:
                    $ref: '#/components/schemas/V4OrganizationMember'
                  type: array
              type: object
        required: true
        x-examples:
          application/merge-patch+json:
            members:
            - email: myself@example.com
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4Organization'
          description: Organization modified
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: 'The organization could not be modified. (invalid input:
                      user ''invalid-email'' does not exist or is invalid)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Invalid input
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: 'The organization could not be modified. (not found:
                      the organization with id ''acme'' could not be found)'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Modify organization
      tags:
      - organizations
    put:
      description: |
        This operation allows a user to create an organization.
      operationId: addOrganization
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4Organization'
        required: true
        x-examples:
          application/json:
            id: string
            members:
            - email: myself@example.com
            - email: colleague@example.com
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: acme
                    members:
                    - email: user1@example.com
                    - email: user2@example.com
              schema:
                $ref: '#/components/schemas/V4Organization'
          description: Organization created
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        409:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: The organization could not be created. (org already exists)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Organization already exists
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Error
      summary: Create an organization
      tags:
      - organizations
  /v4/organizations/{organization_id}/credentials/:
    get:
      description: |
        Returns credentials for an organization, if available.
        For more information on credentials,
        see [Set credentials](#operation/addCredentials).

        Here is another paragraph.

        ### Example response body for AWS

        ```json
        [
          {
            "id": "a1b2c3",
            "provider": "aws",
            "aws": {
              "roles": {
                "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
                "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
              }
            }
          }
        ]
        ```

        ### Example response body for Azure

        ```json
        [
          {
            "id": "a1b2c3",
            "provider": "azure",
            "azure": {
              "credential": {
                "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
                "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
                "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
              }
            }
          }
        ]
        ```
      operationId: getCredentials
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - id: a1b2c3
                    provider: azure
                    azure:
                      credential:
                        client_id: c93bf55e-5bf7-4966-ad2b-e6f6e7721d50
                        subscription_id: b388b7c7-4479-4040-9ac5-1e13edd6b1cd
                        tenant_id: 3dd2e94a-92ba-434c-99be-32bb65864a99
              schema:
                $ref: '#/components/schemas/V4GetCredentialsResponse'
          description: Credentials
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get credentials
      tags:
      - organizations
    post:
      description: |
        Add a set of credentials to the organization allowing the creation and
        operation of clusters within a cloud provider account/subscription.

        The actual type of these credentials depends on the cloud provider the
        installation is running on. AWS and Azure are currently supported.

        Credentials in an organization are immutable. Each organization can only
        have one set of credentials.

        Once credentials have been set for an organization, they are used for
        every new cluster that will be created for the organization.

        ### Example request body for AWS

        ```json
        {
          "provider": "aws",
          "aws": {
            "roles": {
              "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
              "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
            }
          }
        }
        ```

        ### Example request body for Azure

        ```json
        {
          "provider": "azure",
          "azure": {
            "credential": {
              "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
              "secret_key": "720e38f7-3af4-463c-9313-abcdf2ead612",
              "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
              "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
            }
          }
        }
        ```
      operationId: addCredentials
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V4AddCredentialsRequest'
        required: true
        x-examples:
          application/json:
            provider: aws
            aws:
              roles:
                admin: arn:aws:iam::123456789012:role/GiantSwarmAdmin
                awsoperator: arn:aws:iam::123456789012:role/GiantSwarmAWSOperator
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_CREATED
                    message: A new set of credentials has been created with ID '5d9h4'
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Credentials created
          headers:
            Location:
              description: URI of the new credentials resource
              schema:
                type: string
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        409:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_ALREADY_EXISTS
                    message: The organisation already has a set of credentials
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Conflict
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Set credentials
      tags:
      - organizations
  /v4/organizations/{organization_id}/credentials/{credential_id}/:
    get:
      description: |
        Returns details for a particular set of credentials, identified by its
        ID. The returned data does not contain any secrets (i. e.
        passphrase, secret key). For more information on credentials, see
        [Set credentials](#operation/addCredentials).

        ### Example response body for AWS

        ```json
        {
          "id": "a1b2c3",
          "provider": "aws",
          "aws": {
            "roles": {
              "admin": "arn:aws:iam::123456789012:role/GiantSwarmAdmin",
              "awsoperator": "arn:aws:iam::123456789012:role/GiantSwarmAWSOperator"
            }
          }
        }
        ```

        ### Example response body for Azure

        ```json
        {
          "id": "a1b2c3",
          "provider": "azure",
          "azure": {
            "credential": {
              "client_id": "c93bf55e-5bf7-4966-ad2b-e6f6e7721d50",
              "subscription_id": "b388b7c7-4479-4040-9ac5-1e13edd6b1cd",
              "tenant_id": "3dd2e94a-92ba-434c-99be-32bb65864a99"
            }
          }
        }
        ```
      operationId: getCredential
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: |
          An ID for the organization.
          This ID must be unique and match this regular
          expression: ^[a-z0-9_]{4,30}$
        in: path
        name: organization_id
        required: true
        schema:
          type: string
      - description: Unique ID of a credential set
        in: path
        name: credential_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: a1b2c3
                    provider: azure
                    azure:
                      credential:
                        client_id: c93bf55e-5bf7-4966-ad2b-e6f6e7721d50
                        subscription_id: b388b7c7-4479-4040-9ac5-1e13edd6b1cd
                        tenant_id: 3dd2e94a-92ba-434c-99be-32bb65864a99
              schema:
                $ref: '#/components/schemas/V4GetCredentialResponse'
          description: Credentials details
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get credential details
      tags:
      - organizations
  /v4/releases/:
    get:
      description: |
        Lists all releases available for new clusters or for upgrading existing
        clusters. Might also serve as an archive to obtain details on older
        releases.
      operationId: getReleases
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - version: 1.14.9
                    timestamp: 2017-09-21T08:14:03.37759Z
                    changelog:
                    - component: kubernetes
                      description: Security fixes
                    - component: calico
                      description: Security fixes
                    components:
                    - name: kubernetes
                      version: 1.5.8
                    - name: calico
                      version: 0.9.1
                    active: false
                  - version: 2.8.4
                    timestamp: 2017-11-11T12:24:56.59969Z
                    changelog:
                    - component: calico
                      description: Bugfix
                    components:
                    - name: kubernetes
                      version: 1.7.3
                    - name: calico
                      version: 1.1.1
                    active: true
              schema:
                items:
                  $ref: '#/components/schemas/V4ReleaseListItem'
                type: array
          description: Releases list
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
      summary: Get releases
      tags:
      - releases
  /v5/clusters/:
    post:
      description: |
        Allows to create most recent clusters on AWS installations.

        ### Node pools

        In the Giant Swarm API v5, worker nodes are grouped into pools of worker
        nodes where all nodes share the same configuration.

        When creating a cluster without submitting the `nodepools` attribute,
        or with its value being an empty array, one node pool with default
        configuration will be created.

        Node pools can be created, deleted and modified during the entire
        lifetime of a cluster.

        See
        [node pools](#tag/nodepools) and
        [Create node pool](#operation/addNodePool) for details.
      operationId: addClusterV5
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5AddClusterRequest'
        description: New cluster definition
        required: true
        x-examples:
          application/json:
            owner: myteam
            release_version: 7.1.0
            name: Production cluster using k8s 1.14
            master:
              availability_zone: europe-central-1c
            nodepools:
            - name: General purpose
              availability_zones:
                number: 2
              scaling:
                min: 3
                max: 30
              node_spec:
                aws:
                  instance_type: m4.2xlarge
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: n45do
                    owner: myteam
                    release_version: 7.1.0
                    name: Production cluster using k8s 1.14
                    master:
                      availability_zone: europe-central-1c
                    nodepools:
                    - name: General purpose
                      availability_zones:
                      - europe-central-1a
                      - europe-central-1c
                      scaling:
                        min: 3
                        max: 30
                      node_spec:
                        aws:
                          instance_type: m4.2xlarge
              schema:
                $ref: '#/components/schemas/V5ClusterDetailsResponse'
          description: Cluster created
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Create cluster (v5)
      tags:
      - clusters
      x-internal: true
  /v5/clusters/{cluster_id}/:
    get:
      description: |
        Allows to retrieve cluster details on AWS installations.
      operationId: getClusterV5
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: 7g4di
                    create_date: 2019-06-01T12:00:13.949270905Z
                    api_endpoint: https://api.k8s.7g4di.example.com
                    name: All purpose cluster
                    release_version: 8.0.0
                    owner: acme
                    credential_id: a1b2c
                    master:
                      availability_zone: europe-west-1c
                    conditions:
                    - last_transition_time: 2019-03-25T17:10:09.333633991Z
                      condition: Created
                    versions:
                    - last_transition_time: 2019-03-25T17:10:09.333633991Z
                      version: 1.2.3
              schema:
                $ref: '#/components/schemas/V5ClusterDetailsResponse'
          description: Cluster details
        301:
          description: Version mismatch
          headers:
            Location:
              description: |
                URI of the new path to use for retrying the request, as the one
                used is not usable for this cluster.
              schema:
                type: string
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do not have access to it. Please make sure the cluster ID
                      is correct, and that you are a member of the organization that
                      it belongs to.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get cluster details (v5)
      tags:
      - clusters
      x-internal: true
    patch:
      description: |
        Allows to change cluster properties on AWS installations.
      operationId: modifyClusterV5
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5ModifyClusterRequest'
        description: Merge-patch body
        required: true
        x-examples:
          application/json:
            name: New cluster name
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5ClusterDetailsResponse'
          description: Cluster modified
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID 'wqtlq' could not be found, or perhaps
                      you do...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Modify cluster (v5)
      tags:
      - clusters
      x-internal: true
  /v5/clusters/{cluster_id}/nodepools/:
    get:
      description: |
        Returns a list of node pools from a given cluster.
      operationId: getNodePools
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                  - id: a7r
                    name: Batch number crunching
                    availability_zones:
                    - eu-west-1d
                    scaling:
                      min: 2
                      max: 5
                    node_spec:
                      aws:
                        instance_type: p3.8xlarge
                      volume_sizes_gb:
                        docker: 100
                        kubelet: 100
                    status:
                      nodes: 4
                      nodes_ready: 3
                  - id: 6fe
                    name: Application servers
                    availability_zones:
                    - eu-west-1a
                    - eu-west-1b
                    - eu-west-1c
                    scaling:
                      min: 3
                      max: 15
                    node_spec:
                      aws:
                        instance_type: p3.2xlarge
                      volume_sizes_gb:
                        docker: 100
                        kubelet: 100
                    status:
                      nodes: 11
                      nodes_ready: 11
              schema:
                $ref: '#/components/schemas/V5GetNodePoolsResponse'
          description: Node pools list
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get node pools
      tags:
      - nodepools
      x-internal: true
    post:
      description: |
        This allows to add a node pool to a cluster.

        Some, but not all, node pool configuration can be changed after
        creation. The following settings will have a permanent effect:

        - `availability_zones`
        - `instance_type`
      operationId: addNodePool
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5AddNodePoolRequest'
        x-examples:
          application/json:
            name: My general purpose node pool
            availability_zones:
              number: 2
            scaling:
              min: 3
              max: 10
            node_spec:
              aws:
                instance_type: m4.2xlarge
      responses:
        201:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: a1b
                    name: My general purpose node pool
                    availability_zones:
                    - eu-central-1a
                    - eu-central-1c
                    scaling:
                      min: 3
                      max: 10
                    node_spec:
                      aws:
                        instance_type: m4.2xlarge
              schema:
                $ref: '#/components/schemas/V5GetNodePoolResponse'
          description: Node pool created
          headers:
            Location:
              description: URI of the new node pool resource
              schema:
                type: string
        400:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: INVALID_INPUT
                    message: The node pool could not be created. (Invalid name, length
                      is greater than maximum length of 100.)
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Bad request
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Create node pool
      tags:
      - nodepools
      x-internal: true
  /v5/clusters/{cluster_id}/nodepools/{nodepool_id}/:
    delete:
      description: |
        Triggers the deletion of a node pool.

        Nodes in the pool will first be cordoned and drained. Note that it is
        your responsibililty to make sure that workloads using the node pool can
        be scheduled elsewhere. We recommend to double-check the available
        capacity of remaining node pools, as well as any node selectors and
        taints. Also you can do the draining yourself before issuing the
        delete request, to observe the outcome. Use

        ```
        kubectl drain nodes -l giantswarm.nodepool_id= ...
        ```

        TODO: adapt the command for correct label syntax
      operationId: deleteNodePool
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Node Pool ID
        in: path
        name: nodepool_id
        required: true
        schema:
          type: string
      responses:
        202:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_DELETION_STARTED
                    message: The cluster with ID 'wqtlq' is being deleted.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Deleting node pool
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The node pool with ID 'wqt' could not be found...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Delete node pool
      tags:
      - nodepools
      x-internal: true
    get:
      description: |
        Returns all available details on a specific node pool.
      operationId: getNodePool
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Node Pool ID
        in: path
        name: nodepool_id
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/json:
              examples:
                response:
                  value:
                    id: a3k
                    name: Node pool name
                    availability_zones:
                    - europe-central-1a
                    scaling:
                      min: 3
                      max: 5
                    subnet: 10.1.0.0/24
                    node_spec:
                      aws:
                        instance_type: m4.large
                      volume_sizes_gb:
                        docker: 100
                        kubelet: 100
                    status:
                      nodes: 4
                      nodes_ready: 3
              schema:
                $ref: '#/components/schemas/V5GetNodePoolResponse'
          description: Node pool details
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Get node pool details
      tags:
      - nodepools
      x-internal: true
    patch:
      description: |
        Allows to rename a node pool or change its scaling settings.
      operationId: modifyNodePool
      parameters:
      - description: |
          As described in the [authentication](#section/Authentication) section
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: |
          A randomly generated key that can be used to track a request throughout
          services of Giant Swarm.
        in: header
        name: X-Request-ID
        required: false
        schema:
          type: string
      - description: |
          Name of an activity to track, like "list-clusters". This allows to
          analyze several API requests sent in context and gives an idea on
          the purpose.
        in: header
        name: X-Giant-Swarm-Activity
        required: false
        schema:
          type: string
      - description: |
          If activity has been issued by a CLI, this header can contain the
          command line
        in: header
        name: X-Giant-Swarm-CmdLine
        required: false
        schema:
          type: string
      - description: Cluster ID
        in: path
        name: cluster_id
        required: true
        schema:
          type: string
      - description: Node Pool ID
        in: path
        name: nodepool_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/V5ModifyNodePoolRequest'
        description: Merge-patch body
        required: true
        x-examples:
          application/merge-patch+json:
            scaling:
              min: 5
              max: 30
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V5GetNodePoolResponse'
          description: Success
        401:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: PERMISSION_DENIED
                    message: The requested resource cannot be accessed using the provided
                      authentication details.
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Permission denied
        404:
          content:
            application/json:
              examples:
                response:
                  value:
                    code: RESOURCE_NOT_FOUND
                    message: The cluster with ID '6drr3' could not be found...
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: Cluster not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/V4GenericResponse'
          description: error
      summary: Modify node pool
      tags:
      - nodepools
      x-internal: true
components:
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
      required: true
  schemas:
    V4AppCatalogsResponse:
      items:
        properties:
          metadata:
            properties:
              name:
                description: A URL friendly identifier for the catalog.
                type: string
              labels:
                description: The labels that are set on this app catalog
                properties:
                  application.giantswarm.io/catalog-type:
                    type: string
                  app-operator.giantswarm.io/version:
                    type: string
                type: object
            type: object
          spec:
            properties:
              title:
                description: A display friendly title for this catalog.
                type: string
              description:
                description: A description of the catalog.
                type: string
              logoURL:
                description: A URL to a logo representing this catalog.
                type: string
              storage:
                description: Contains information on where to find the full catalog,
                  and what type of catalog it is.
                properties:
                  URL:
                    description: A URL where clients can download the full catalog.
                    type: string
                  type:
                    description: The format of this catalog. (Currently only helm
                      is supported.)
                    type: string
                type: object
            type: object
        type: object
      type: array
    V4GenericResponse:
      example:
        code: code
        message: message
      properties:
        message:
          description: A human readable message
          type: string
        code:
          description: |
            A machine readable [response code](https://github.com/giantswarm/api-spec/blob/master/details/RESPONSE_CODES.md) like e. g. `INVALID_CREDENTIALS`
          type: string
      type: object
    V4InfoResponse:
      example:
        general:
          installation_name: installation_name
          provider: provider
          availability_zones:
            default: 6
            max: 0
          datacenter: datacenter
        stats:
          cluster_creation_duration:
            p25: 5
            median: 1
            p75: 5
        workers:
          count_per_cluster:
            default: 7.061401241503109
            max: 2.3021358869347655
          vm_size:
            default: default
            options:
            - options
            - options
          instance_type:
            default: default
            options:
            - options
            - options
      properties:
        general:
          $ref: '#/components/schemas/V4InfoResponse_general'
        stats:
          $ref: '#/components/schemas/V4InfoResponse_stats'
        workers:
          $ref: '#/components/schemas/V4InfoResponse_workers'
      required:
      - general
      type: object
    V4CreateAuthTokenRequest:
      example:
        password_base64: password_base64
        email: email
      properties:
        email:
          description: Your email address
          type: string
        password_base64:
          description: Your password as a base64 encoded string
          type: string
      type: object
    V4CreateAuthTokenResponse:
      example:
        auth_token: auth_token
      properties:
        auth_token:
          description: The newly created API token
          type: string
      type: object
    V4UserListItem:
      example:
        created: created
        expiry: expiry
        email: email
      properties:
        email:
          description: Email address of the user
          type: string
        created:
          description: The date and time that this account was created
          type: string
        expiry:
          description: The date and time when this account will expire
          type: string
      type: object
    V4CreateUserRequest:
      description: Request model for creating a new user
      example:
        password: password
        expiry: expiry
      properties:
        password:
          description: A Base64 encoded password
          type: string
        expiry:
          description: The date and time when this account will expire
          type: string
      required:
      - password
      type: object
    V4ModifyUserRequest:
      description: Request model for modifying a specific user
      example:
        expiry: expiry
        email: email
      properties:
        email:
          description: New email address
          type: string
        expiry:
          description: New expiry date. (Only editable by admins)
          type: string
      type: object
    V4ModifyUserPasswordRequest:
      description: Request model for modifying a user's password
      example:
        current_password_base64: current_password_base64
        new_password_base64: new_password_base64
      properties:
        current_password_base64:
          description: Current password encoded in Base64. Not required for admins
          type: string
        new_password_base64:
          description: New password encoded in Base64
          type: string
      required:
      - new_password_base64
      type: object
    V4ClusterListItem:
      example:
        owner: owner
        path: path
        name: name
        id: id
        create_date: create_date
        release_version: release_version
      properties:
        id:
          description: Unique cluster identifier
          type: string
        create_date:
          description: Date/time of cluster creation
          type: string
        name:
          description: Cluster name
          type: string
        owner:
          description: Name of the organization owning the cluster
          type: string
        release_version:
          description: The semantic version number of this cluster
          type: string
        path:
          description: API path of the cluster resource
          type: string
      type: object
    V4AddClusterRequest:
      description: Request model for creating a new cluster
      example:
        owner: owner
        scaling:
          min: 6
          max: 1
        name: name
        availability_zones: 0
        release_version: release_version
        workers:
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
      properties:
        owner:
          description: Name of the organization owning the cluster
          type: string
        name:
          description: Cluster name
          type: string
        release_version:
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            to use in the new cluster
          type: string
        availability_zones:
          description: |
            Number of availability zones a cluster should be spread across. The
            default is provided via the [info](#operation/getInfo) endpoint.
          type: integer
        scaling:
          $ref: '#/components/schemas/V4AddClusterRequest_scaling'
        workers:
          description: |
            Worker node definition on KVM and Azure. If present, the first item
            of the array is expected to contain the specification for all worker
            nodes. Not available on AWS.
          items:
            $ref: '#/components/schemas/V4NodeDefinition'
          type: array
      required:
      - owner
      type: object
    V4NodeDefinition:
      example:
        memory:
          size_gb: 5.962133916683182
        cpu:
          cores: 2
        storage:
          size_gb: 5.637376656633329
        aws:
          instance_type: instance_type
        azure:
          vm_size: vm_size
        labels:
          key: '{}'
      properties:
        aws:
          $ref: '#/components/schemas/V4NodeDefinition_aws'
        azure:
          $ref: '#/components/schemas/V4NodeDefinition_azure'
        memory:
          $ref: '#/components/schemas/V4NodeDefinition_memory'
        storage:
          $ref: '#/components/schemas/V4NodeDefinition_storage'
        cpu:
          $ref: '#/components/schemas/V4NodeDefinition_cpu'
        labels:
          additionalProperties: true
          type: object
      type: object
    V4ClusterDetailsResponse:
      description: Response model showing details of a cluster
      example:
        owner: owner
        scaling:
          min: 0
          max: 6
        api_endpoint: api_endpoint
        kvm:
          port_mappings:
          - protocol: protocol
            port: 1
          - protocol: protocol
            port: 1
        name: name
        availability_zones:
        - availability_zones
        - availability_zones
        id: id
        create_date: create_date
        release_version: release_version
        workers:
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
        credential_id: credential_id
      properties:
        id:
          description: Unique cluster identifier
          type: string
        api_endpoint:
          description: URI of the Kubernetes API endpoint
          type: string
        create_date:
          description: Date/time of cluster creation
          type: string
        owner:
          description: Name of the organization owning the cluster
          type: string
        name:
          description: Cluster name
          type: string
        credential_id:
          description: |
            ID of the credentials used to operate the cluster (only on AWS and
            Azure). See [Set credentials](#operation/addCredentials) for details.
          type: string
        release_version:
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            currently running this cluster.
          type: string
        scaling:
          $ref: '#/components/schemas/V4ClusterDetailsResponse_scaling'
        availability_zones:
          description: List of availability zones a cluster is spread across.
          items:
            description: Name of the availability zone
            type: string
          type: array
        workers:
          description: Information about worker nodes in the cluster (deprecated)
          items:
            $ref: '#/components/schemas/V4NodeDefinition'
          type: array
        kvm:
          $ref: '#/components/schemas/V4ClusterDetailsResponse_kvm'
      type: object
    V4ModifyClusterRequest:
      description: Request body for cluster modification
      example:
        owner: owner
        scaling:
          min: 0
          max: 6
        name: name
        release_version: release_version
        workers:
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
        - memory:
            size_gb: 5.962133916683182
          cpu:
            cores: 2
          storage:
            size_gb: 5.637376656633329
          aws:
            instance_type: instance_type
          azure:
            vm_size: vm_size
          labels:
            key: '{}'
      properties:
        name:
          description: Name for the cluster
          type: string
        owner:
          description: Name of the organization owning the cluster
          type: string
        release_version:
          description: Release version to use after an upgrade
          type: string
        scaling:
          $ref: '#/components/schemas/V4ModifyClusterRequest_scaling'
        workers:
          description: Worker node array (deprecated)
          items:
            $ref: '#/components/schemas/V4NodeDefinition'
          type: array
      type: object
    V4GetKeyPairsResponse:
      description: Array of sparse key pair objects
      items:
        properties:
          id:
            description: Unique identifier of the key pair
            type: string
          description:
            description: Free text information about the key pair
            type: string
          ttl_hours:
            description: Expiration time (from creation) in hours
            type: integer
          create_date:
            description: Date/time of creation
            type: string
          common_name:
            description: The common name of the certificate subject.
            type: string
          certificate_organizations:
            description: The certificate subject's `organization` fields.
            type: string
        type: object
      type: array
    V4AddKeyPairRequest:
      example:
        certificate_organizations: certificate_organizations
        description: description
        ttl_hours: 0
        cn_prefix: cn_prefix
      properties:
        description:
          description: Free text information about the key pair
          type: string
        ttl_hours:
          description: Expiration time (from creation) in hours
          format: int32
          type: integer
        cn_prefix:
          description: The common name prefix of the certificate subject. This only
            allows characters that are usable in domain names (`a-z`, `0-9`, and `.-`,
            where `.-` must not occur at either the start or the end).
          type: string
        certificate_organizations:
          description: |
            This will set the certificate subject's `organization` fields.
            Use a comma seperated list of values.
          type: string
      required:
      - description
      type: object
    V4AddKeyPairResponse:
      example:
        description: description
        ttl_hours: 0
        client_key_data: client_key_data
        client_certificate_data: client_certificate_data
        id: id
        create_date: create_date
        certificate_authority_data: certificate_authority_data
      properties:
        id:
          description: Unique identifier of the key pair
          type: string
        description:
          description: Free text information about the key pair
          type: string
        ttl_hours:
          description: Expiration time (from creation) in hours
          type: integer
        create_date:
          description: Date/time of creation
          type: string
        certificate_authority_data:
          description: PEM-encoded CA certificate of the cluster
          type: string
        client_key_data:
          description: PEM-encoded RSA private key
          type: string
        client_certificate_data:
          description: PEM-encoded certificate
          type: string
      type: object
    V4GetClusterStatusResponse:
      additionalProperties: true
      description: Object about a cluster's current state
      type: object
    V4GetClusterAppsResponse:
      description: Array of apps
      items:
        $ref: '#/components/schemas/V4App'
      type: array
    V4App:
      example:
        metadata:
          name: name
        spec:
          catalog: catalog
          name: name
          namespace: namespace
          version: version
          user_config:
            configmap:
              name: name
              namespace: namespace
        status:
          app_version: app_version
          release:
            last_deployed: last_deployed
            status: status
          version: version
      properties:
        metadata:
          $ref: '#/components/schemas/V4App_metadata'
        spec:
          $ref: '#/components/schemas/V4App_spec'
        status:
          $ref: '#/components/schemas/V4App_status'
      type: object
    V4AppSpecUserConfigConfigMap:
      description: User definable configuration to be applied when the app is deployed
      example:
        configmap:
          name: name
          namespace: namespace
      properties:
        configmap:
          $ref: '#/components/schemas/V4AppSpecUserConfigConfigMap_configmap'
      type: object
    V4CreateAppRequest:
      description: A part of the App CR that we create behind the scenes
      example:
        spec:
          catalog: catalog
          name: name
          namespace: namespace
          version: version
      properties:
        spec:
          $ref: '#/components/schemas/V4CreateAppRequest_spec'
      type: object
    V4ModifyAppRequest:
      description: The fields that are editable when trying to modify an app
      example:
        spec:
          version: version
      properties:
        spec:
          $ref: '#/components/schemas/V4ModifyAppRequest_spec'
      type: object
    V4GetClusterAppConfigResponse:
      additionalProperties: true
      description: The values configmap for a given app returned as a yaml file
      type: object
    V4CreateAppConfigRequest:
      additionalProperties: true
      description: A part of the App CR that we create behind the scenes
      type: object
    V4OrganizationListItem:
      example:
        id: id
      properties:
        id:
          description: Unique name/identifier of the organization
          type: string
      type: object
    V4Organization:
      example:
        members:
        - email: email
        - email: email
        id: id
      properties:
        id:
          description: Unique name/identifier of the organization
          type: string
        members:
          description: List of members that belong to this organization
          items:
            $ref: '#/components/schemas/V4OrganizationMember'
          type: array
      type: object
    V4OrganizationMember:
      example:
        email: email
      properties:
        email:
          description: Email address of the user
          type: string
      type: object
    V4GetCredentialsResponse:
      description: |
        List of credential sets for an organization. As of now, this can contain
        either zero or one items.
      items:
        $ref: '#/components/schemas/V4GetCredentialResponse'
      type: array
    V4GetCredentialResponse:
      description: Response model for getting details on a set of credentials
      example:
        provider: provider
        id: id
        aws:
          roles:
            awsoperator: awsoperator
            admin: admin
        azure:
          credential:
            subscription_id: subscription_id
            tenant_id: tenant_id
            client_id: client_id
      properties:
        id:
          description: Unique ID of the credentials
          type: string
        provider:
          description: Either 'aws' or 'azure'
          type: string
        aws:
          $ref: '#/components/schemas/V4GetCredentialResponse_aws'
        azure:
          $ref: '#/components/schemas/V4GetCredentialResponse_azure'
      type: object
    V4AddCredentialsRequest:
      description: Request model for adding a set of credentials
      example:
        provider: provider
        aws:
          roles:
            awsoperator: awsoperator
            admin: admin
        azure:
          credential:
            subscription_id: subscription_id
            tenant_id: tenant_id
            secret_key: secret_key
            client_id: client_id
      properties:
        provider:
          type: string
        aws:
          $ref: '#/components/schemas/V4AddCredentialsRequest_aws'
        azure:
          $ref: '#/components/schemas/V4AddCredentialsRequest_azure'
      required:
      - provider
      type: object
    V4ReleaseListItem:
      example:
        components:
        - name: name
          version: version
        - name: name
          version: version
        active: true
        changelog:
        - component: component
          description: description
        - component: component
          description: description
        version: version
        timestamp: timestamp
      properties:
        version:
          description: The semantic version number
          type: string
        timestamp:
          description: Date and time of the release creation
          type: string
        active:
          description: |
            If true, the version is available for new clusters and cluster
            upgrades. Older versions become unavailable and thus have the
            value `false` here.
          type: boolean
        changelog:
          description: |
            Structured list of changes in this release, in comparison to the
            previous version, with respect to the contained components.
          items:
            $ref: '#/components/schemas/V4ReleaseListItem_changelog'
          type: array
        components:
          description: |
            List of components and their version contained in the release
          items:
            $ref: '#/components/schemas/V4ReleaseListItem_components'
          type: array
      required:
      - changelog
      - components
      - timestamp
      - version
      type: object
    V5AddClusterRequest:
      example:
        owner: owner
        nodepools:
        - scaling:
            min: 6
            max: 1
          name: name
          availability_zones:
            number: 0
            zones:
            - zones
            - zones
          node_spec:
            aws:
              instance_type: instance_type
        - scaling:
            min: 6
            max: 1
          name: name
          availability_zones:
            number: 0
            zones:
            - zones
            - zones
          node_spec:
            aws:
              instance_type: instance_type
        name: name
        release_version: release_version
        master:
          availability_zone: availability_zone
      properties:
        owner:
          description: |
            Name of the organization owning the cluster
          type: string
        name:
          description: Cluster name
          type: string
        release_version:
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            to use in the new cluster. If not given, the latest release will be
            used.
          type: string
        master:
          $ref: '#/components/schemas/V5AddClusterRequest_master'
        nodepools:
          description: |
            Specification of node pools to be created immediately with the
            cluster.
          items:
            $ref: '#/components/schemas/V5AddNodePoolRequest'
          type: array
      required:
      - owner
      type: object
    V5AddNodePoolRequest:
      description: |
        Request body structure for creating a node pool
      example:
        scaling:
          min: 6
          max: 1
        name: name
        availability_zones:
          number: 0
          zones:
          - zones
          - zones
        node_spec:
          aws:
            instance_type: instance_type
      properties:
        name:
          description: |
            Node pool name. _(Length between 1-100, cannot contain control codes such as newline.)_
          type: string
        availability_zones:
          $ref: '#/components/schemas/V5AddNodePoolRequest_availability_zones'
        scaling:
          $ref: '#/components/schemas/V5AddNodePoolRequest_scaling'
        node_spec:
          $ref: '#/components/schemas/V5AddNodePoolRequestNodeSpec'
      type: object
    V5AddNodePoolRequestNodeSpec:
      example:
        aws:
          instance_type: instance_type
      properties:
        aws:
          $ref: '#/components/schemas/V5AddNodePoolRequestNodeSpec_aws'
      type: object
    V5ClusterDetailsResponse:
      example:
        owner: owner
        api_endpoint: api_endpoint
        versions:
        - last_transition_time: last_transition_time
          version: version
        - last_transition_time: last_transition_time
          version: version
        name: name
        id: id
        create_date: create_date
        release_version: release_version
        conditions:
        - condition: condition
          last_transition_time: last_transition_time
        - condition: condition
          last_transition_time: last_transition_time
        credential_id: credential_id
        master:
          availability_zone: availability_zone
      properties:
        id:
          description: Unique cluster identifier
          type: string
        api_endpoint:
          description: URI of the Kubernetes API endpoint
          type: string
        create_date:
          description: Date/time of cluster creation
          type: string
        owner:
          description: |
            Name of the organization owning the cluster
          type: string
        name:
          description: Cluster name
          type: string
        credential_id:
          description: |
            ID of the credentials used to operate the cluster. See
            [Set credentials](#operation/addCredentials) for details.
          type: string
        release_version:
          description: |
            The [release](https://docs.giantswarm.io/api/#tag/releases) version
            used by the cluster
          type: string
        master:
          $ref: '#/components/schemas/V5ClusterDetailsResponse_master'
        conditions:
          description: List of conditions the cluster has gone through
          items:
            $ref: '#/components/schemas/V5ClusterDetailsResponse_conditions'
          type: array
        versions:
          items:
            $ref: '#/components/schemas/V5ClusterDetailsResponse_versions'
          type: array
      type: object
    V5ModifyClusterRequest:
      description: Request model for cluster modification
      example:
        name: name
        release_version: release_version
      properties:
        name:
          description: New cluster name
          type: string
        release_version:
          description: Release version to upgrade to
          type: string
      type: object
    V5GetNodePoolsResponse:
      items:
        $ref: '#/components/schemas/V5GetNodePoolResponse'
      type: array
    V5GetNodePoolResponse:
      example:
        subnet: subnet
        scaling:
          min: 0
          max: 6
        name: name
        availability_zones:
        - availability_zones
        - availability_zones
        id: id
        node_spec:
          volume_sizes_gb:
            kubelet: 5
            docker: 1
          aws:
            instance_type: instance_type
        status:
          nodes: 5
          nodes_ready: 2
      properties:
        id:
          description: Node pool identifier. Unique within a tenant cluster.
          type: string
        name:
          description: Node pool name
          type: string
        availability_zones:
          description: |
            Names of the availability zones used by the nodes of this pool.
          items:
            description: Name of the availability zone
            type: string
          type: array
        scaling:
          $ref: '#/components/schemas/V5GetNodePoolResponse_scaling'
        subnet:
          description: IP address block used by the node pool
          type: string
        node_spec:
          $ref: '#/components/schemas/V5GetNodePoolResponseNodeSpec'
        status:
          $ref: '#/components/schemas/V5GetNodePoolResponse_status'
      type: object
    V5GetNodePoolResponseNodeSpec:
      example:
        volume_sizes_gb:
          kubelet: 5
          docker: 1
        aws:
          instance_type: instance_type
      properties:
        aws:
          $ref: '#/components/schemas/V5GetNodePoolResponseNodeSpec_aws'
        volume_sizes_gb:
          $ref: '#/components/schemas/V5GetNodePoolResponseNodeSpec_volume_sizes_gb'
      type: object
    V5ModifyNodePoolRequest:
      description: Request body for node pool modification
      example:
        scaling:
          min: 0
          max: 6
        name: name
      properties:
        name:
          description: New name of the node pool
          type: string
        scaling:
          $ref: '#/components/schemas/V5ModifyNodePoolRequest_scaling'
      type: object
    inline_object:
      properties:
        members:
          description: List of members that belong to this organization
          items:
            $ref: '#/components/schemas/V4OrganizationMember'
          type: array
      type: object
    V4InfoResponse_general_availability_zones:
      description: Number of availability zones which a cluster can be spread across.
      example:
        default: 6
        max: 0
      properties:
        max:
          description: Number of availability zones in the region of this installation.
          type: integer
        default:
          description: Default number of availability zones for a cluster.
          type: integer
      required:
      - default
      - max
    V4InfoResponse_general:
      description: General information
      example:
        installation_name: installation_name
        provider: provider
        availability_zones:
          default: 6
          max: 0
        datacenter: datacenter
      properties:
        installation_name:
          description: Unique name of the installation
          type: string
        provider:
          description: The technical provider used in this installation. Either "kvm",
            "aws", or "azure".
          type: string
        datacenter:
          description: Identifier of the datacenter or cloud provider region, e. g.
            "eu-west-1"
          type: string
        availability_zones:
          $ref: '#/components/schemas/V4InfoResponse_general_availability_zones'
      required:
      - availability_zones
    V4InfoResponse_stats_cluster_creation_duration:
      description: Duration of cluster creation, summarized.
      example:
        p25: 5
        median: 1
        p75: 5
      properties:
        median:
          description: Median of the value distribution
          type: integer
        p25:
          description: 25th percentile of the value distribution
          type: integer
        p75:
          description: 75th percentile of the value distribution
          type: integer
    V4InfoResponse_stats:
      description: Statistics about the installation
      example:
        cluster_creation_duration:
          p25: 5
          median: 1
          p75: 5
      properties:
        cluster_creation_duration:
          $ref: '#/components/schemas/V4InfoResponse_stats_cluster_creation_duration'
    V4InfoResponse_workers_count_per_cluster:
      description: Number of workers per cluster
      example:
        default: 7.061401241503109
        max: 2.3021358869347655
      properties:
        max:
          description: Maximum number of worker a cluster can have. Might be null
            when unknown.
          type: number
        default:
          description: Default number of workers in a new cluster will have, if not
            specifiec otherwise
          type: number
    V4InfoResponse_workers_instance_type:
      description: Instance types to be used for worker nodes. Only available for
        AWS clusters.
      example:
        default: default
        options:
        - options
        - options
      properties:
        options:
          description: List of available instance types
          items:
            type: string
          type: array
        default:
          description: The instance type used in new cluster, if not specified
          type: string
    V4InfoResponse_workers_vm_size:
      description: Azure Virtual Machine size to be used for worker nodes. Only available
        for Azure clusters.
      example:
        default: default
        options:
        - options
        - options
      properties:
        options:
          description: List of available instance types
          items:
            type: string
          type: array
        default:
          description: The instance type used in new cluster, if not specified
          type: string
    V4InfoResponse_workers:
      description: Information related to worker nodes
      example:
        count_per_cluster:
          default: 7.061401241503109
          max: 2.3021358869347655
        vm_size:
          default: default
          options:
          - options
          - options
        instance_type:
          default: default
          options:
          - options
          - options
      properties:
        count_per_cluster:
          $ref: '#/components/schemas/V4InfoResponse_workers_count_per_cluster'
        instance_type:
          $ref: '#/components/schemas/V4InfoResponse_workers_instance_type'
        vm_size:
          $ref: '#/components/schemas/V4InfoResponse_workers_vm_size'
    V4AddClusterRequest_scaling:
      description: |
        Attributes specific to cluster node scaling on KVM and Azure. To have
        full control of the cluster size, min and max can be set to the same
        value. If only `min` or only `max` is specified, `min` and `max` will
        be set equally. Not available on AWS.
      example:
        min: 6
        max: 1
      properties:
        min:
          description: |
            Minimum number of cluster nodes
          type: integer
        max:
          description: |
            Maximum number of cluster nodes
          type: integer
    V4NodeDefinition_aws:
      description: |
        Attributes specific to nodes running on Amazon Web Services (AWS)
      example:
        instance_type: instance_type
      properties:
        instance_type:
          description: |
            EC2 instance type name. Must be the same for all worker nodes
            of a cluster.
          type: string
    V4NodeDefinition_azure:
      description: |
        Attributes specific to nodes running on Microsoft Azure
      example:
        vm_size: vm_size
      properties:
        vm_size:
          description: |
            Azure Virtual Machine size. Must be the same for all worker nodes
            of a cluster.
          type: string
    V4NodeDefinition_memory:
      example:
        size_gb: 5.962133916683182
      properties:
        size_gb:
          description: RAM size in GB. Can be an integer or float.
          type: number
    V4NodeDefinition_storage:
      example:
        size_gb: 5.637376656633329
      properties:
        size_gb:
          description: Node storage size in GB. Can be an integer or float.
          type: number
    V4NodeDefinition_cpu:
      example:
        cores: 2
      properties:
        cores:
          description: Number of CPU cores
          type: integer
    V4ClusterDetailsResponse_scaling:
      description: |
        Attributes specific to cluster node scaling as set during cluster
        creation or cluster scaling.
      example:
        min: 0
        max: 6
      properties:
        min:
          description: |
            Minimum number of cluster nodes as configured
          type: integer
        max:
          description: |
            Maximum number of cluster nodes as configured
          type: integer
    V4ClusterDetailsResponse_kvm_port_mappings:
      example:
        protocol: protocol
        port: 1
      properties:
        port:
          description: |
            The port on the control plane that will forward traffic to the tenant cluster
          type: integer
        protocol:
          description: |
            The protocol this port mapping is made for.
          type: string
    V4ClusterDetailsResponse_kvm:
      description: Attributes specific to clusters running on KVM (on-prem) installations.
      example:
        port_mappings:
        - protocol: protocol
          port: 1
        - protocol: protocol
          port: 1
      properties:
        port_mappings:
          description: |
            Reveals the ports on the control plane that are mapped to this tenant cluster's ingress
            and which protocol that port supports. Only shown and relevant on our on-prem KVM clusters.
          items:
            $ref: '#/components/schemas/V4ClusterDetailsResponse_kvm_port_mappings'
          type: array
    V4ModifyClusterRequest_scaling:
      description: |
        Attributes specific to cluster node scaling. To have full control of
        the cluster size, min and max can be set to the same value.
      example:
        min: 0
        max: 6
      properties:
        min:
          description: |
            Minimum number of cluster nodes
          type: integer
        max:
          description: |
            Maximum number of cluster nodes
          type: integer
    V4App_metadata:
      example:
        name: name
      properties:
        name:
          description: The identifier you set when creating this app
          type: string
    V4App_spec:
      example:
        catalog: catalog
        name: name
        namespace: namespace
        version: version
        user_config:
          configmap:
            name: name
            namespace: namespace
      properties:
        name:
          description: Name of the chart that was used to install this app
          type: string
        namespace:
          description: Namespace that this app is installed to
          type: string
        version:
          description: Version of the chart that was used to install this app
          type: string
        catalog:
          description: The catalog that this app came from
          type: string
        user_config:
          $ref: '#/components/schemas/V4AppSpecUserConfigConfigMap'
    V4App_status_release:
      example:
        last_deployed: last_deployed
        status: status
      properties:
        last_deployed:
          description: Date and time that the app was last last deployed
          type: string
        status:
          description: 'A string representing the status of the app. (Can be: empty,
            DEPLOYED or FAILED)'
          type: string
    V4App_status:
      example:
        app_version: app_version
        release:
          last_deployed: last_deployed
          status: status
        version: version
      properties:
        app_version:
          description: Version of the installed app
          type: string
        version:
          description: Version of the chart that was used to install this app
          type: string
        release:
          $ref: '#/components/schemas/V4App_status_release'
    V4AppSpecUserConfigConfigMap_configmap:
      example:
        name: name
        namespace: namespace
      properties:
        name:
          description: Name of the config map containing values to apply, e.g. prometheus-user-values
          type: string
        namespace:
          description: Namespace of the values config map on the control plane, e.g.
            123ab
          type: string
    V4CreateAppRequest_spec:
      example:
        catalog: catalog
        name: name
        namespace: namespace
        version: version
      properties:
        name:
          description: Name of the chart that should be used to install this app
          type: string
        namespace:
          description: Namespace that this app will be installed to
          type: string
        version:
          description: Version of the chart that should be used to install this app
          type: string
        catalog:
          description: The catalog where the chart for this app can be found
          type: string
      required:
      - catalog
      - name
      - namespace
      - version
    V4ModifyAppRequest_spec:
      example:
        version: version
      properties:
        version:
          description: Version of the chart that should be used to install this app
          type: string
    V4GetCredentialResponse_aws_roles:
      description: IAM roles to assume by certain entities
      example:
        awsoperator: awsoperator
        admin: admin
      properties:
        admin:
          description: ARN of the IAM role Giant Swarm support staff will use
          type: string
        awsoperator:
          description: ARN of the IAM role assumed by the software operating the clusters
          type: string
    V4GetCredentialResponse_aws:
      description: Credentials specific to an AWS account
      example:
        roles:
          awsoperator: awsoperator
          admin: admin
      properties:
        roles:
          $ref: '#/components/schemas/V4GetCredentialResponse_aws_roles'
    V4GetCredentialResponse_azure_credential:
      description: Service principal credential
      example:
        subscription_id: subscription_id
        tenant_id: tenant_id
        client_id: client_id
      properties:
        client_id:
          description: Client ID of the service principal
          type: string
        subscription_id:
          description: Azure subscription ID
          type: string
        tenant_id:
          description: Tenant ID of the Azure subscription
          type: string
    V4GetCredentialResponse_azure:
      description: Credentials specific to an Azure service principal
      example:
        credential:
          subscription_id: subscription_id
          tenant_id: tenant_id
          client_id: client_id
      properties:
        credential:
          $ref: '#/components/schemas/V4GetCredentialResponse_azure_credential'
    V4AddCredentialsRequest_aws_roles:
      description: IAM roles to assume by certain entities
      example:
        awsoperator: awsoperator
        admin: admin
      properties:
        admin:
          description: ARN of the IAM role to assume by Giant Swarm support staff
          type: string
        awsoperator:
          description: ARN of the IAM role to assume by the software operating clusters
          type: string
      required:
      - admin
      - awsoperator
    V4AddCredentialsRequest_aws:
      description: Credentials specific to an AWS account
      example:
        roles:
          awsoperator: awsoperator
          admin: admin
      properties:
        roles:
          $ref: '#/components/schemas/V4AddCredentialsRequest_aws_roles'
      required:
      - roles
    V4AddCredentialsRequest_azure_credential:
      description: Service principal credential
      example:
        subscription_id: subscription_id
        tenant_id: tenant_id
        secret_key: secret_key
        client_id: client_id
      properties:
        client_id:
          description: Client ID of the service principal
          type: string
        secret_key:
          description: Secret key of the service principal
          type: string
        subscription_id:
          description: Azure subscription ID
          type: string
        tenant_id:
          description: Tenant ID of the Azure subscription
          type: string
      required:
      - client_id
      - secret_key
      - subscription_id
      - tenant_id
    V4AddCredentialsRequest_azure:
      description: Credentials specific to an Azure service principal
      example:
        credential:
          subscription_id: subscription_id
          tenant_id: tenant_id
          secret_key: secret_key
          client_id: client_id
      properties:
        credential:
          $ref: '#/components/schemas/V4AddCredentialsRequest_azure_credential'
      required:
      - credential
    V4ReleaseListItem_changelog:
      example:
        component: component
        description: description
      properties:
        component:
          description: |
            If the changed item was a component, this attribute is the
            name of the component.
          type: string
        description:
          description: Human-friendly description of the change
          type: string
    V4ReleaseListItem_components:
      example:
        name: name
        version: version
      properties:
        name:
          description: Name of the component
          type: string
        version:
          description: Version number of the component
          type: string
      required:
      - name
      - version
    V5AddClusterRequest_master:
      description: |
        Configuration regarding the master node. If not given, the master node
        will be placed automatically.
      example:
        availability_zone: availability_zone
      properties:
        availability_zone:
          description: |
            Name of the availability zone to use for the master node. If not
            given, the master node will be placed automatically.
          type: string
    V5AddNodePoolRequest_availability_zones:
      description: |
        Specifies how the nodes of a pool are spread over availability zones.
        The object must contain either the `number` attribute or the `zones`
        attribute, but not both.
        The maximum `number` of availbility zones is the same as that found
        under `general.availability_zones.max` from the `/v4/info/` endpoint.
        When not given, availability zones assignment is handled automatically.
      example:
        number: 0
        zones:
        - zones
        - zones
      properties:
        number:
          description: |
            Number of zones to use. If given, the zones are picked
            automatically. _(Maximum limit of 4 supported.)_
          type: integer
        zones:
          description: |
            Names of the availability zones to use. _(Must be same region as the cluster.)_
          items:
            type: string
          type: array
    V5AddNodePoolRequest_scaling:
      description: |
        Attributes specific to cluster node scaling. To have full control of
        the cluster size, min and max can be set to the same value, however `max`
        must be greater or equal to `min`. If only `min` or only `max` is specified,
        `min` and `max` will be set equally.
      example:
        min: 6
        max: 1
      properties:
        min:
          description: Minimum number of nodes in the pool.
          type: integer
        max:
          description: Maximum number of nodes in the pool.
          type: integer
    V5AddNodePoolRequestNodeSpec_aws:
      description: |
        Attributes specific to the AWS provider
      example:
        instance_type: instance_type
      properties:
        instance_type:
          description: |
            EC2 instance type to use for all nodes in the node pool. _(Validated against available instance types.)_
          type: string
    V5ClusterDetailsResponse_master:
      description: |
        Information about the master node
      example:
        availability_zone: availability_zone
      properties:
        availability_zone:
          description: |
            Name of the availability zone the master node is placed in
          type: string
    V5ClusterDetailsResponse_conditions:
      example:
        condition: condition
        last_transition_time: last_transition_time
      properties:
        last_transition_time:
          description: Date and time when the cluster transitioned into this condition
          type: string
        condition:
          description: A string describing the condition, e. g. 'Created'
          type: string
    V5ClusterDetailsResponse_versions:
      example:
        last_transition_time: last_transition_time
        version: version
      properties:
        last_transition_time:
          description: Date and time when the cluster got created with or upgrated
            to this version
          type: string
        version:
          description: Semantic version number
          type: string
    V5GetNodePoolResponse_scaling:
      description: |
        Scaling range of the node pool.
        If `min` and `max` differ, the node pool is scaled automatically.
        If both have the same value, the cluster size is pinned.
      example:
        min: 0
        max: 6
      properties:
        min:
          description: Minimum number of nodes in the pool
          type: integer
        max:
          description: Maximum number of nodes in the pool
          type: integer
    V5GetNodePoolResponse_status:
      description: Information on the current size and status of the node pool
      example:
        nodes: 5
        nodes_ready: 2
      properties:
        nodes:
          description: Desired number of nodes in the pool
          type: integer
        nodes_ready:
          description: Number of nodes in state NodeReady
          type: integer
    V5GetNodePoolResponseNodeSpec_aws:
      description: |
        Attributes specific to the AWS provider
      example:
        instance_type: instance_type
      properties:
        instance_type:
          description: |
            EC2 instance type used by all nodes in this pool
          type: string
    V5GetNodePoolResponseNodeSpec_volume_sizes_gb:
      example:
        kubelet: 5
        docker: 1
      properties:
        docker:
          description: |
            Size of the Docker volume, used to store docker images and
            overlay file system data, in GB.
          type: integer
        kubelet:
          description: |
            Size of the kubelet volume of the worker, used e. g. for
            volumes of type EmptyDir, in GB.
          type: integer
    V5ModifyNodePoolRequest_scaling:
      description: |
        Attributes specific to node pool scaling. To have full control of
        the cluster size, min and max can be set to the same value. If only
        `min` or only `max` is specified, `min` and `max` will be set equally.
      example:
        min: 0
        max: 6
      properties:
        min:
          description: Minimum number of nodes in the pool
          type: integer
        max:
          description: Maximum number of nodes in the pool
          type: integer
  securitySchemes:
    AuthorizationHeaderToken:
      description: |
        Clients authenticate by passing an auth token via the `Authorization`
        header with the format

        ```
        Authorization: giantswarm
        ````

        Auth tokens can be obtained using the
        [createAuthToken](#operation/createAuthToken) operation.

        For Giant Swarm staff who are authenticating using SSO,
        pass the auth token via the `Authorization` header with a value of the
        format `Bearer `.
      in: header
      name: Authorization
      type: apiKey
